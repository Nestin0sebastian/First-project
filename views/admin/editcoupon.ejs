<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(to top, #0a6051, #4bb084);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .form-container {
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 800px;
            max-width: 100%;
            box-sizing: border-box;
            text-align: center;
            margin-top: 50px;
        }

        h2 {
            color: #333333;
        }

        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333333;
        }

        input,
        textarea,
        select {
            width: calc(100% - 20px);
            padding: 10px;
            box-sizing: border-box;
            border: 1px solid #ced4da;
            border-radius: 5px;
            margin-top: 8px;
            font-size: 16px;
        }

        textarea {
            resize: vertical;
        }

        button {
            background-color: #28a745;
            color: #fff;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        button:hover {
            background-color: #218838;
        }

        .back-to-home {
            background-color: #007bff;
            color: #fff;
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        .back-to-home:hover {
            background-color: #0056b3;
        }

        .generate-code-button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            display: block;
            margin: auto;
            margin-top: 15px;
        }

        .generate-code-button:hover {
            background-color: #45a049;
        }

        .bigger-code {
            font-size: 20px;
            font-weight: bold;
            color: #000000;
        }
        .error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;}
    </style>
</head>


<body>
    <div class="form-container">
        <h2> Edit Coupon Form</h2>
        <form action="/admin/editcouponpost/<%= coupon._id %>" method="post">
            <div>
                <label for="couponcode">Coupon Code</label>
                <input type="text" id="couponcode" name="couponcode" placeholder="Enter Coupon Code" value="<%= coupon.couponcode %>" required readonly>
            </div>
    
            <div class="form-group">
                <label for="description">Description</label>
                <textarea id="description" name="description" placeholder="Enter Description" required><%= coupon.description %></textarea>
            </div>
    
            <div class="form-group">
                <label for="discount_percentage">Discount Percentage</label>
                <input type="text" id="discount_percentage" name="discount_percentage" placeholder="Enter Discount Percentage" value="<%= coupon.discount_percentage %>" required>
            </div>
    
            <div class="form-group">
                <label for="max_discount_amount">Max Discount Amount</label>
                <input type="text" id="max_discount_amount" name="max_discount_amount" placeholder="Enter Max Discount Amount" value="<%= coupon.max_discount_amount %>" required>
            </div>
    
            <div class="form-group">
                <label for="minAmount">Min Amount</label>
                <input type="text" id="minAmount" name="min_amount" placeholder="Enter Min Amount" value="<%= coupon.min_amount %>" required>
            </div>
    
            <div class="form-group">
                <label for="maxAmount">Max Amount</label>
                <input type="text" id="maxAmount" name="max_amount" placeholder="Enter Max Amount" value="<%= coupon.max_amount %>" required>
            </div>
    
            <div class="form-group">
                <label for="expire_date">Expire Date</label>
                <input type="date" id="expire_date" name="expire_date" value="<%= coupon.expire_date %>" required>
            </div>
    
            <button type="submit">Submit</button>
            <a href="/admin/">
                <button type="button" class="back-to-home">Back to Home</button>
            </a>
            <% function formatDate(date) {
                if (!date) return '';  // Return an empty string if date is undefined or null
            
                const options = { year: 'numeric', month: 'numeric', day: 'numeric' };
                const formattedDate = new Date(date).toLocaleDateString('en-CA', options);
                
                // Convert formatted date to "YYYY-MM-DD" format
                const [month, day, year] = formattedDate.split('/');
                return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
            } %>
        </form>
    </div>
    <script>
        function generateCode() {
            const randomCode = generateRandomCode(12).toUpperCase();
            const couponCodeInput = document.getElementById('couponcode');
            couponCodeInput.value = randomCode;
            couponCodeInput.classList.add('bigger-code');
        }

        function generateRandomCode(length) {
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += characters.charAt(Math.floor(Math.random() * characters.length));
            }
            return result;
        }
    </script>
      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const form = document.querySelector('form');
      
          form.addEventListener('submit', function (event) {
            if (!validateForm()) {
              event.preventDefault();
            }
          });
      
          function validateForm() {
            const couponCode = document.getElementById('couponcode').value.trim();
            const description = document.getElementById('description').value.trim();
            const discountPercentage = document.getElementById('discount_percentage').value.trim();
            const maxDiscountAmount = document.getElementById('max_discount_amount').value.trim();
            const minAmount = document.getElementById('minAmount').value.trim();
            const maxAmount = document.getElementById('maxAmount').value.trim();
            const expireDate = document.getElementById('expire_date').value.trim();
      
            const errors = [];
      
            // Validate Coupon Code
            if (couponCode === '') {
              displayError('couponcode', 'Coupon Code cannot be blank.');
              errors.push('Coupon Code cannot be blank.');
            } else {
              clearError('couponcode');
            }
      
            // Validate Description
            if (description === '') {
              displayError('description', 'Description cannot be blank.');
              errors.push('Description cannot be blank.');
            } else {
              clearError('description');
            }
      
            // Validate Discount Percentage
            if (discountPercentage === '' || isNaN(discountPercentage) || +discountPercentage < 1) {
              displayError('discount_percentage', 'Enter a valid percentage.');
              errors.push('Discount Percentage must be atleast 1.');
            } else {
              clearError('discount_percentage');
            }
      
            // Validate Max Discount Amount
            if (maxDiscountAmount === '' || isNaN(maxDiscountAmount) || +maxDiscountAmount < 1) {
              displayError('max_discount_amount', 'Enter a valid amount.');
              errors.push('Max Discount Amount must be atleast 1.');
            } else {
              clearError('max_discount_amount');
            }
      
            // Validate Min Amount
            if (minAmount === '' || isNaN(minAmount) || +minAmount < 1) {
              displayError('minAmount', 'Enter a valid amount.');
              errors.push('Min Amount must be atleast 1.');
            } else {
              clearError('minAmount');
            }
      
            // Validate Max Amount
            if (maxAmount === '' || isNaN(maxAmount) || +maxAmount < 1) {
              displayError('maxAmount', 'Enter a valid amount.');
              errors.push('Max Amount must be atleast 1.');
            } else {
              clearError('maxAmount');
            }
      
            // Validate Expire Date
            if (expireDate === '') {
              displayError('expire_date', 'Expire Date cannot be blank.');
              errors.push('Expire Date cannot be blank.');
            } else {
              clearError('expire_date');
            }
      
            // Return true if there are no errors
            return errors.length === 0;
          }
      
          function displayError(fieldId, errorMessage) {
            const field = document.getElementById(fieldId);
            clearError(fieldId);
      
            const errorContainer = document.createElement('div');
            errorContainer.classList.add('error-message');
            errorContainer.textContent = errorMessage;
            errorContainer.style.color = 'red'; // Set the error message color to red
            field.parentNode.appendChild(errorContainer);
          }
      
          function clearError(fieldId) {
            const field = document.getElementById(fieldId);
            const errorContainer = field.parentNode.querySelector('.error-message');
      
            if (errorContainer) {
              errorContainer.remove();
            }
          }
        });
      </script>
</body>



</html>
